{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","title","status","handleChange","event","target","name","value","setState","this","props","todos","selectedUser","selectedUserId","filteredTodoss","filter","todo","includes","completed","className","type","placeholder","onChange","map","key","id","classNames","checked","readOnly","userId","onClick","Component","defaultProps","getData","url","fetch","then","response","json","result","data","CurrentUser","user","a","loadData","prevProps","iserId","clear","email","phone","App","React","ReactDOM","render","document","getElementById"],"mappings":"2YAKaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAO,GACPC,OAAQ,OAHZ,EAMEC,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGF,EAAOC,KAVd,4CAcE,WACE,MAAgDE,KAAKC,MAA7CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,eAC7B,EAA0BJ,KAAKT,MAAvBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAETY,EAAiBH,EACpBI,QAAO,SAAAC,GAAI,OAAIA,EAAKf,OAClBe,EAAKf,MAAMgB,SAAShB,MACtBc,QAAO,SAACC,GACP,OAAQd,GACN,IAAK,SACH,OAAQc,EAAKE,UACf,IAAK,YACH,OAAOF,EAAKE,UACd,IAAK,MACL,QACE,OAAO,MAIf,OAEE,yBAAKC,UAAU,YACb,sCACA,2BACEC,KAAK,OACLd,KAAK,QACLe,YAAY,kBACZd,MAAON,EACPqB,SAAUb,KAAKN,eAEjB,4BACEG,KAAK,SACLgB,SAAUb,KAAKN,cAEf,4BAAQI,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,cAEF,yBAAKY,UAAU,4BACb,wBAAIA,UAAU,kBACXL,EAAeS,KAAI,SAAAP,GAAI,OACtB,wBACEQ,IAAKR,EAAKS,GACVN,UAAWO,IACT,iBAAkBV,EAAKE,UACnB,0BACA,8BAGN,+BACE,2BACEE,KAAK,WACLO,QAASX,EAAKE,UACdU,UAAQ,IAEV,2BAAIZ,EAAKf,QAGX,4BACEkB,UAAWO,IACT,+BACCb,IAAmBG,EAAKa,QACnB,mCAERT,KAAK,SACLU,QAAS,kBAAMlB,EAAaI,EAAKa,UAPnC,WAUGb,EAAKa,mBAlFxB,GAA8BE,cAyG9BhC,EAASiC,aAAe,CACtBrB,MAAO,I,UC5GHsB,EAAU,SAAAC,GAAG,OAAIC,MAAMD,GAC1BE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,SCAlB,IAAMC,EAAb,4MACEzC,MAAQ,CACN0C,KAAM,MAFV,8FAKE,sBAAAC,EAAA,sDACElC,KAAKmC,WADP,gDALF,6HASE,WAAyBC,GAAzB,SAAAF,EAAA,yDACMlC,KAAKC,MAAMmB,SAAWgB,EAAUhB,OADtC,iDAKEpB,KAAKmC,WALP,gDATF,oHAiBE,4BAAAD,EAAA,sEDRuBG,ECSOrC,KAAKC,MAAMmB,ODRlCI,EAAQ,GAAD,OAdC,uCAcD,YAAgBa,ICO9B,OACQJ,EADR,OAGEjC,KAAKD,SAAS,CAAEkC,SAHlB,iCDRK,IAAkBI,ICQvB,YAjBF,0EAuBE,WACE,IAAQJ,EAASjC,KAAKT,MAAd0C,KACR,EAA0BjC,KAAKC,MAAvBmB,EAAR,EAAQA,OAAQkB,EAAhB,EAAgBA,MAEhB,OACE,yBAAK5B,UAAU,eACb,wBAAIA,UAAU,sBACZ,oEAEIU,KAILa,GACC,oCACE,wBAAIvB,UAAU,qBAAqBuB,EAAKpC,MACxC,uBAAGa,UAAU,sBAAsBuB,EAAKM,OACxC,uBAAG7B,UAAU,sBAAsBuB,EAAKO,QAI5C,4BACE7B,KAAK,SACLD,UAAU,qBACVW,QAASiB,GAHX,cA5CR,GAAiChB,aCoDlBmB,E,4MA/CblD,MAAQ,CACNW,MAAO,GACPE,eAAgB,G,EASlBD,aAAe,SAACiB,GACd,EAAKrB,SAAS,CAAEK,eAAgBgB,K,EAGlCkB,MAAQ,WACN,EAAKvC,SAAS,CAAEK,eAAgB,K,8FAXlC,4BAAA8B,EAAA,sEFPQV,EARQ,wCASbG,MAAK,SAAAzB,GAAK,OAAIA,EAAMI,QACnB,SAAAC,GAAI,OAAKA,EAAKf,OAASe,EAAKa,aEKhC,OACQlB,EADR,OAGEF,KAAKD,SAAS,CAAEG,UAHlB,gD,0EAcA,WACE,MAAkCF,KAAKT,MAA/BW,EAAR,EAAQA,MAAOE,EAAf,EAAeA,eAEf,OACE,yBAAKM,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACER,MAAOA,EACPC,aAAcH,KAAKG,aACnBC,eAAgBA,KAIpB,yBAAKM,UAAU,gBACb,yBAAKA,UAAU,0BACZN,EACC,kBAAC,EAAD,CACEgB,OAAQhB,EACRkC,MAAOtC,KAAKsC,QAEZ,0B,GAxCEI,IAAMpB,WCLxBqB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.b84d96f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport class TodoList extends Component {\n  state = {\n    title: '',\n    status: 'all',\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { todos, selectedUser, selectedUserId } = this.props;\n    const { title, status } = this.state;\n\n    const filteredTodoss = todos\n      .filter(todo => todo.title\n      && todo.title.includes(title))\n      .filter((todo) => {\n        switch (status) {\n          case 'active':\n            return !todo.completed;\n          case 'completed':\n            return todo.completed;\n          case 'all':\n          default:\n            return true;\n        }\n      });\n\n    return (\n\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Filter by title\"\n          value={title}\n          onChange={this.handleChange}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n        >\n          <option value=\"all\">all</option>\n          <option value=\"active\">active</option>\n          <option value=\"completed\">completed</option>\n        </select>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodoss.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item', todo.completed\n                    ? 'TodoList__item--checked'\n                    : 'TodoList__item--unchecked',\n                )}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames(\n                    'TodoList__user-button button',\n                    (selectedUserId === todo.userId)\n                      && ('TodoList__user-button--selected'),\n                  )}\n                  type=\"button\"\n                  onClick={() => selectedUser(todo.userId)}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number,\n      title: PropTypes.string,\n    }),\n  ),\n  selectedUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","const TODOS_URL = 'https://mate-api.herokuapp.com/todos';\nconst USER_URL = 'https://mate-api.herokuapp.com/users';\n\nconst getData = url => fetch(url)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport function getTodos() {\n  return (getData(TODOS_URL)\n    .then(todos => todos.filter(\n      todo => (todo.title && todo.userId),\n    )));\n}\n\nexport function getUsers(iserId) {\n  return getData(`${USER_URL}/${iserId}`);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUsers } from '../../api/api';\n\nexport class CurrentUser extends Component {\n  state = {\n    user: null,\n  }\n\n  async componentDidMount() {\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.userId === prevProps.userId) {\n      return;\n    }\n\n    this.loadData();\n  }\n\n  async loadData() {\n    const user = await getUsers(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { userId, clear } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user:\n            ${userId}`}\n          </span>\n        </h2>\n\n        {user && (\n          <>\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n          </>\n        )}\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n          onClick={clear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clear: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  selectedUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clear = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUser={this.selectedUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clear={this.clear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}